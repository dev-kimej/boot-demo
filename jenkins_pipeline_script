pipeline {
    agent any

    environment {
        GIT_URL = "https://github.com/dev-kimej/boot-demo.git"
    }
    
    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }

    stages {
        stage('Pull') {
            steps {
                git url: "${GIT_URL}", branch: "main", poll: true, changelog: true
            }
        }
        
        stage('Maven Build') {
            steps {
                // Get some code from a GitHub repository
                git url: "${GIT_URL}", branch: "main"

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        
        stage('Build') {
            steps {
                sh 'docker build -t docker-demo .'
            }
        }
        
        stage('Deploy') {
            steps{
                sh 'docker ps -q --filter name=boot-demo && docker stop boot-demo && docker rm boot-demo'
                sh 'docker-compose up -d'
            }
        }
        
        stage('Finish') {
            steps{
                sh 'docker images -qf dangling=true | xargs -I{} docker rmi {}'
            }
        }
    }
}
